extends ../../../../node_modules/@yamato-daiwa/programming_documentation/Layouts/TwoColumns/TwoColumnsLayout.pug


block append Requirements

  include ../../../SharedAssets/Markup/SharedAssets.russian.pug
  include ../../../SharedComponents/SharedComponents.russian.pug
  include Data/MarkupProcessingSettings__FromFile__RawValid.russian.pug
  include ReusableFragments/MarkupProcessingSettings-ReusableFragments.russian.pug


block append Metadata

  -

    const {
      $heading: topHeading,
      $sectioning: localizedSectioning
    } = localizedRouting.configurationFile.$children.markupProcessing;

    RegularWebPageTemplate__YDF.configure({
      metadata: {
        title: buildHTML_PageTitle(topHeading),
        description:
            "Описание конфигурации обработки разметки (исходный код: Pug, выходной код: HTML) в «Yamato Daiwa Automation» " +
              "(сокращённо: «YDA», читается: «Уай-ди-эй»), Node.js-утилите для сборки проектов (клиентских веб-приложений, " +
              "серверных приложений, консольных утилит, библиотек)."
      },
      stylesSheetsURIs: [
        "$CommonStyles",
        "$LayoutsStyles/TwoColumns/TwoColumnsLayout.css",
        "$PreMadesStyles",
        "@CustomizedExternalComponents"
      ]
    });

    RoutingEmulator.setCurrentRoute("configurationFile.markupProcessing");

    LanguageDropDownList__YDF_DK.setLinks({
      english: routing.english.configurationFile.$children.markupProcessing.$URI,
      japanese: routing.japanese.configurationFile.$children.markupProcessing.$URI
    });


block append HeadScripts

  if __IS_PRODUCTION_BUILDING_MODE__

    +GoogleAnalyticsScript


block append SpecificContent

  article

    //- ━━━ `$markupProcessing` — Настройки обработки разметки ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
    h1.Article-Heading1!= topHeading

    +PageNotReadyApology--YDPD({ currentState: PageNotReadyApology__YDPD.States.initialTextNotComplete })

    p.Article-Paragraph.
      Обработка #[+Term--YDID разметки] может быть определена в
        #[+ImportantEntity__Code--YDID $projectBuilding.$markupProcessing]
        #[+Term--YDID файла конфигурации] (#[+ImportantEntity--YDID yda.config.yaml] #[+Keyphrase--YDID по умолчанию]):

    +CodeViewer--YDF
      +CodeViewer-Listing--YDF({ codeLanguage: CodeViewer__YDF.SupportedCodesLanguages.YAML }).
        $projectBuilding:

          $markupProcessing:

            # Задайте настройки обработки разметки здесь в соответствии с данным руководством

    +CompactTableOfContents--YDF_DK(localizedSectioning)

    //- ━━━ `$common` — Общие настройки ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
    +Heading--YDF({
      level: 2,
      innerHTML: localizedSectioning.common.$heading,
      HTML_ID: localizedSectioning.common.$anchor
    }).Article-Heading2

    +PropertyMetadata--YDF_DK(
      Object.assign(
        {},
        $$YamatoDaiwaAutomationAPI.MarkupProcessingSettings__FromFile__RawValid.propertiesSpecification.$common,
        {
          properties: {
            $localization: Object.assign(
              {},
              $$YamatoDaiwaAutomationAPI.MarkupProcessingSettings__FromFile__RawValid.propertiesSpecification.$common.
                  properties.$localization,
              {
                type: {
                  name: "MarkupProcessingSettings__FromFile__RawValid.Common.Localization",
                  anchorOrURI: localizedSectioning.common.$children.localization.$URI
                },
                properties: null
              }
            )
          }
        }
      )
    )

    p.Article-Paragraph
      | Настройки, общие для #[+Keyword--YDID всех]
      |
      +Link--YDF({
        internalURI: localizedRouting.terminology.$sectioning.entryPointsAndChildrenFiles.$children.entryPointsGroup.$URI
      }) групп точек входа
      | .


    //- ─── `$localization` — Общие настройки локализации ──────────────────────────────────────────────────────────────
    +Heading--YDF({
      level: 3,
      innerHTML: localizedSectioning.common.$children.localization.$heading,
      HTML_ID: localizedSectioning.common.$children.localization.$anchor
    }).Article-Heading3

    +ObjectTypeAbstract--YDF_DK({
      typeName: "MarkupProcessingSettings__FromFile__RawValid.Common.Localization",
      localizedDescriptiveHeading: "Общие настройки локализации",
      propertiesSpecification: Object.assign(
        {},
        $$YamatoDaiwaAutomationAPI.MarkupProcessingSettings__FromFile__RawValid.propertiesSpecification.$common.
            properties.$localization.properties,
        {
          $locales: Object.assign(
            {},
            $$YamatoDaiwaAutomationAPI.MarkupProcessingSettings__FromFile__RawValid.propertiesSpecification.$common.
                properties.$localization.properties.$locales,
            {
              value: {
                type: {
                  name: "MarkupProcessingSettings__FromFile__RawValid.Reusables.Localization.LocaleData",
                  anchorOrURI: localizedSectioning.common.$children.localization.$children.locales.$URI
                }
              }
            }
          )
        }
      )
    })

    p.Article-Paragraph
      | #[+Keyphrase--YDID Общие для всех]
      |
      +Link--YDF({
        internalURI: localizedRouting.terminology.$sectioning.entryPointsAndChildrenFiles.$children.entryPointsGroup.$URI
      }) групп точек входа
      |
      | настройки
      |
      +Link--YDF({
        internalURI: localizedRouting.functionality.$children.markupProcessing.$children.localization.$URI
      }) локализации
      | .
      | Если для конкретной #[+Term--YDID группы точек входа] не&nbsp;указаны настройки #[+Term--YDID локализации],
      |   то #[+Term--YDID локализация] будет осуществлена согласно этим настройкам.

    +AdmonitionBlock--YDF({
      SVG_Icon: true,
      geometricVariation: AdmonitionBlock__YDF.GeometricVariations.stickyNoteLike,
      decorativeVariation: AdmonitionBlock__YDF.DecorativeVariations.warning
    })
      | Далее в этом разделе подразумевается, что Вы знаете, какая именно функциональность в
      |   #[+ImportantEntity--YDID YDA] подразумевается под #[+Term--YDID локализацией].
      | Если это не&nbsp;так, что сначала ознакомьтесь с
      |
      +Link--YDF({
        internalURI: localizedRouting.functionality.$children.markupProcessing.$children.localization.$URI
      }) этой статьёй
      | .


    //- ─── `$stringResourcesFileRelativePath` — Относительный путь к файлу строковых ресурсов ─────────────────────────
    +Heading--YDF({
      level: 4,
      innerHTML: localizedSectioning.common.$children.localization.$children.stringResourcesFileRelativePath.$heading,
      HTML_ID: localizedSectioning.common.$children.localization.$children.stringResourcesFileRelativePath.$anchor
    }).Article-Heading4

    +PropertyMetadata--YDF_DK(
      $$YamatoDaiwaAutomationAPI.MarkupProcessingSettings__FromFile__RawValid.propertiesSpecification.$common.properties.
          $localization.properties.$stringResourcesFileRelativePath
    )

    +Localization-stringResourcesFileRelativePath--PropertyDescription


    //- ─── `$localizedStringResourcesConstantName` — Имя константы локализованных строковых ресурсов ──────────────────
    +Heading--YDF({
      level: 4,
      innerHTML: localizedSectioning.common.$children.localization.$children.localizedStringResourcesConstantName.$heading,
      HTML_ID: localizedSectioning.common.$children.localization.$children.localizedStringResourcesConstantName.$anchor
    }).Article-Heading4

    +PropertyMetadata--YDF_DK(
      $$YamatoDaiwaAutomationAPI.MarkupProcessingSettings__FromFile__RawValid.propertiesSpecification.$common.properties.
          $localization.properties.$localizedStringResourcesConstantName
    )

    +Localization-localizedStringResourcesConstantName--PropertyDescription({ isCommonSettings: true })


    //- ─── `$localeConstantName` — Имя константы локали ───────────────────────────────────────────────────────────────
    +Heading--YDF({
      level: 4,
      innerHTML: localizedSectioning.common.$children.localization.$children.localeConstantName.$heading,
      HTML_ID: localizedSectioning.common.$children.localization.$children.localeConstantName.$anchor
    }).Article-Heading4

    +PropertyMetadata--YDF_DK(
      $$YamatoDaiwaAutomationAPI.MarkupProcessingSettings__FromFile__RawValid.propertiesSpecification.$common.properties.
          $localization.properties.$localeConstantName
    )

    +Localization-localeConstantName--PropertyDescription


    //- ─── `$nameOfConstantForInterpolationToLangHTML_Attribute` — Имя константы для заполнения HTML-аттрибута «lang» ─
    +Heading--YDF({
      level: 4,
      innerHTML: localizedSectioning.common.$children.localization.$children.nameOfConstantForInterpolationToLangHTML_Attribute.$heading,
      HTML_ID: localizedSectioning.common.$children.localization.$children.nameOfConstantForInterpolationToLangHTML_Attribute.$anchor
    }).Article-Heading4

    +PropertyMetadata--YDF_DK(
      $$YamatoDaiwaAutomationAPI.MarkupProcessingSettings__FromFile__RawValid.propertiesSpecification.$common.properties.
          $localization.properties.$nameOfConstantForInterpolationToLangHTML_Attribute
    )

    +Localization-nameOfConstantForInterpolationToLangHTML_Attribute--PropertyDescription


    //- ─── `$locales` — Локали ────────────────────────────────────────────────────────────────────────────────────────
    +Heading--YDF({
      level: 4,
      innerHTML: localizedSectioning.common.$children.localization.$children.locales.$heading,
      HTML_ID: localizedSectioning.common.$children.localization.$children.locales.$anchor
    }).Article-Heading4

    +PropertyMetadata--YDF_DK(
      $$YamatoDaiwaAutomationAPI.MarkupProcessingSettings__FromFile__RawValid.propertiesSpecification.$common.properties.
          $localization.properties.$locales
    )

    +Localization-locales--PropertyDescription


    //- ─── `outputFileInterimNameExtensionWithoutDot` — Промежуточное расширение имени файла без точки ────────────────
    +Heading--YDF({
      level: 5,
      innerHTML: localizedSectioning.common.$children.localization.$children.locales.$children.
          outputFileInterimNameExtensionWithoutDot.$heading,
      HTML_ID: localizedSectioning.common.$children.localization.$children.locales.$children.
          outputFileInterimNameExtensionWithoutDot.$anchor
    }).Article-Heading5

    +PropertyMetadata--YDF_DK(
      $$YamatoDaiwaAutomationAPI.MarkupProcessingSettings__FromFile__RawValid.
          propertiesSpecification.$common.properties.$localization.properties.$locales.value.properties.
          $outputFileInterimNameExtensionWithoutDot
    )

    +Localization-locales-outputFileInterimNameExtensionWithoutDot--PropertyDescription


    //- ─── `$localeConstantValue` — Значение константы локали ─────────────────────────────────────────────────────────
    +Heading--YDF({
      level: 5,
      innerHTML: localizedSectioning.common.$children.localization.$children.locales.$children.
          localeConstantValue.$heading,
      HTML_ID: localizedSectioning.common.$children.localization.$children.locales.$children.
          localeConstantValue.$anchor
    }).Article-Heading5

    +PropertyMetadata--YDF_DK(
      $$YamatoDaiwaAutomationAPI.MarkupProcessingSettings__FromFile__RawValid.
          propertiesSpecification.$common.properties.$localization.properties.$locales.value.properties.
          $localeConstantValue
    )

    +Localization-locales-localeConstantValue--PropertyDescription({ isCommonSettings: true })


    //- ─── `$keyInLocalizedStringResourcesObject` — Ключ в объекте локализованных строковых ресурсов ──────────────────
    +Heading--YDF({
      level: 5,
      innerHTML: localizedSectioning.common.$children.localization.$children.locales.$children.
          keyInLocalizedStringResourcesObject.$heading,
      HTML_ID: localizedSectioning.common.$children.localization.$children.locales.$children.
          keyInLocalizedStringResourcesObject.$anchor
    }).Article-Heading5

    +PropertyMetadata--YDF_DK(
      $$YamatoDaiwaAutomationAPI.MarkupProcessingSettings__FromFile__RawValid.
          propertiesSpecification.$common.properties.$localization.properties.$locales.value.properties.
          $keyInLocalizedStringResourcesObject
    )

    +Localization-locales-keyInLocalizedStringResourcesObject--PropertyDescription({ isCommonSettings: true })


    //- ─── `$valueOfConstantForInterpolationToLangHTML_Attribute` — Значение константы для подстановки в значение аттрибута \"lang\"
    +Heading--YDF({
      level: 5,
      innerHTML: localizedSectioning.common.$children.localization.$children.locales.$children.
          valueOfConstantForInterpolationToLangHTML_Attribute.$heading,
      HTML_ID: localizedSectioning.common.$children.localization.$children.locales.$children.
          valueOfConstantForInterpolationToLangHTML_Attribute.$anchor
    }).Article-Heading5

    +PropertyMetadata--YDF_DK(
      $$YamatoDaiwaAutomationAPI.MarkupProcessingSettings__FromFile__RawValid.
          propertiesSpecification.$common.properties.$localization.properties.$locales.value.properties.
          $valueOfConstantForInterpolationToLangHTML_Attribute
    )

    +Localization-locales-valueOfConstantForInterpolationToLangHTML_Attribute--PropertyDescription({ isCommonSettings: true })


    //- ─── `$excludedFilesPathsRelativeRelativeToProjectRootDirectory` — Относительные корневой директории проекта пути исключённых файлов
    +Heading--YDF({
      level: 4,
      innerHTML: localizedSectioning.common.$children.localization.$children.
          excludedFilesPathsRelativeRelativeToProjectRootDirectory.$heading,
      HTML_ID: localizedSectioning.common.$children.localization.$children.
          excludedFilesPathsRelativeRelativeToProjectRootDirectory.$anchor
    }).Article-Heading4

    +PropertyMetadata--YDF_DK(
      $$YamatoDaiwaAutomationAPI.MarkupProcessingSettings__FromFile__RawValid.
        propertiesSpecification.$common.properties.$localization.properties.
        $excludedFilesPathsRelativeRelativeToProjectRootDirectory
    )

    p.Article-Paragraph.
      Если функциональность локализации должна игнорировать какие-либо #[+Term--YDID Pug-файлы], то их пути,
        #[+Keyword--YDID относительные] корню проекта можно указать через это свойство.

    +AdmonitionBlock--YDF({
      SVG_Icon: true,
      geometricVariation: AdmonitionBlock__YDF.GeometricVariations.stickyNoteLike,
      decorativeVariation: AdmonitionBlock__YDF.DecorativeVariations.warning
    }).
      От игнорируемых таких образом #[+Term--YDID Pug-файлов] #[+Keyword--YDID не]&nbsp;только
        #[+Keyword--YDID не]&nbsp;будут генерироваться несколько выходных #[+Term--YDID HTML-файлов] для каждой
        #[+Term--YDID локали], но и при этом в исходном #[+Term--YDID Pug-файле] #[+Keyword--YDID не]&nbsp;будет
        доступна другая функциональность, связанная с локализацией, например локализованные строковые ресурсы или
        константа для заполнения #[+Term--YDID HTML-аттрибута] #[+ImportantEntity__Code--YDID lang].


    +CodeViewer--YDF
      +CodeViewer-Listing--YDF({ codeLanguage: CodeViewer__YDF.SupportedCodesLanguages.YAML }).
        $projectBuilding:

          $markupProcessing:

            $common:

              $localization:

                $stringResourcesFileRelativePath: 01-Source/LocalizedStringResources.json
                $localizedStringResourcesConstantName: $$localizedStringResources

                $excludedFilesPathsRelativeRelativeToProjectRootDirectory:

                  - Source/Pages/Page1.pug
                  - Source/Pages/Page2.pug

                $locales:

                  english:
                    $outputFileInterimNameExtensionWithoutDot: english
                    $keyInLocalizedStringResourcesObject: $$english

                  russian:
                    $outputFileInterimNameExtensionWithoutDot: russian
                    $keyInLocalizedStringResourcesObject: $$russian
