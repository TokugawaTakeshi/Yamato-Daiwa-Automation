extends ../../../../../node_modules/@yamato-daiwa/programming_documentation/Layouts/TwoColumns/TwoColumnsLayout.pug


block append Requirements

  include ../../../../SharedAssets/Markup/SharedAssets.russian.pug
  include ../../../../SharedComponents/SharedComponents.russian.pug


block append Metadata

  -

    HTML_PAGE_LANGUAGE = "ru";
    HTML_PAGE_TITLE = buildHTML_PageTitle("Базовый транспайлинг из Pug в HTML");
    HTML_PageMetaData = {
      description:
        "Node.js-утилита для сборки проектов (клиентских веб-приложений, серверных приложений, консольных утилит, " +
          "библиотек) «Yamato Daiwa Automation» (сокращённо: «YDA», читается: «Уай-Ди-Эй») " +
          "использует HTML-препроцессор «Pug 3» для обработки разметки, при этом даёт оптимизацию и некоторые " +
          "дополнительные возможности.",
      author: HTML_PAGE_AUTHOR
    };

    FAVICON_URI = "@MustBeInPublicRoot/favicon";

    styleSheetsURIs = [
      "$CommonStyles",
      "$LayoutsStyles/TwoColumns/TwoColumnsLayout.css",
      "$PreMadesStyles",
      "@CustomizedExternalComponents"
    ];

    scriptsURIs.endOfBody = [ "$CommonLogic" ];

    RoutingEmulator.setCurrentRoute("functionality.children.markupProcessing.children.basicPugToHTML_Transpiling");

    LanguageDropDownList__YDF_DK.setLinks({
      english: "./BasicPugToHTML_Transpiling.english.html",
      japanese: "./BasicPugToHTML_Transpiling.japanese.html",
    });


block append HeadScriptsLinks

  if __IS_PRODUCTION_BUILDING_MODE__

    +GoogleAnalyticsScript


block append SpecificContent

  article

    h1.Article-Heading1 Базовый транспайлинг из Pug в HTML

    p.Article-Paragraph.

      #[+ImportantEntity--YDID YDA] использует #[+Term--YDID HTML-препроцессор]
        #[+Link--YDF({ unendorsedExternalURI: sharedExternalLinks.pug.homePage.top }).Article-Link Pug 3]
        для работы с #[+Term--YDID разметкой].
      Хотя поддержка препроцессора со стороны разработчиков
        #[+Link--YDF({ unendorsedExternalURI: sharedExternalLinks.pug.homePage.officialProjectStatusRequest }).Article-Link вызывает вопросы],
        аналога, сочетающего в себе предельно лаконичный синтаксис с богатой функциональностью включая возможность описания
        логики на #[+ImportantEntity--YDID JavaScript] (обычно такое приветствуется, но в определённых ситуациях крайне
        полезно) не разработано и не поддерживается.
      Пока ситуация не изменится, #[+ImportantEntity--YDID YDA] продолжит специализироваться на данном препроцессоре.


    h2.Article-Heading2 Минимальные настройки

    p.Article-Paragraph.

      Для того, чтобы настроить минимальную обработку Pug-файлов, необходимо определить в файле настроек YDA хотя бы
        одну группу точек входа в #[+ImportantEntity__Code--YDID projectBuilding.markupProcessing.entryPointsGroups],
        а именно её ID, директорию с входными файлами и директорию с выходными файлами для конкретного режима сборки.


    h3.Article-Heading3 Пример

    p.Article-Paragraph.

      Начальный пример включает в себя обработку двух Pug-файлов: #[+SecondaryEntity--YDID index.pug] и
        #[+SecondaryEntity--YDID AboutPage.pug].
      Так как пример близок к простейшему, то:

    ul.Article-UnorderedList

      li Будет только один режим сборки - продакшен.
      li Автоматической пересборки проекта при внесении изменений не будет.
      li Обработанный HTML-файлы в браузере автоматически не откроются.


    +CodeViewer--YDF.Article-CodeViewer
      +CodeViewer-Listing--YDF({ codeLanguage: CodeViewer__YDF.SupportedCodesLanguages.YAML }).
        projectBuilding:

          commonSettings:

            publicDirectoriesRelativePaths:

              PRODUCTION: 02-ProductionBuilding


          markupProcessing:

            entryPointsGroups:

              All:
                topDirectoryRelativePath: 01-Source
                buildingModeDependent:
                  PRODUCTION:
                    outputTopDirectoryRelativePath: 02-ProductionBuilding


    h2.Article-Heading2 Инкрементальная сборка
